
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:Slim" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim.html">Slim</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Slim_Exception" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Slim_Exception_ContainerException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Exception/ContainerException.html">ContainerException</a>                    </div>                </li>                            <li data-name="class:Slim_Exception_ContainerValueNotFoundException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Exception/ContainerValueNotFoundException.html">ContainerValueNotFoundException</a>                    </div>                </li>                            <li data-name="class:Slim_Exception_MethodNotAllowedException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Exception/MethodNotAllowedException.html">MethodNotAllowedException</a>                    </div>                </li>                            <li data-name="class:Slim_Exception_NotFoundException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Exception/NotFoundException.html">NotFoundException</a>                    </div>                </li>                            <li data-name="class:Slim_Exception_SlimException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Exception/SlimException.html">SlimException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Slim_Handlers" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Handlers.html">Handlers</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Slim_Handlers_Strategies" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Handlers/Strategies.html">Strategies</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Slim_Handlers_Strategies_RequestResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Slim/Handlers/Strategies/RequestResponse.html">RequestResponse</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_Strategies_RequestResponseArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Slim/Handlers/Strategies/RequestResponseArgs.html">RequestResponseArgs</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Slim_Handlers_AbstractError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/AbstractError.html">AbstractError</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_AbstractHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/AbstractHandler.html">AbstractHandler</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_Error" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/Error.html">Error</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_NotAllowed" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/NotAllowed.html">NotAllowed</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_NotFound" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/NotFound.html">NotFound</a>                    </div>                </li>                            <li data-name="class:Slim_Handlers_PhpError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Handlers/PhpError.html">PhpError</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Slim_Http" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Http.html">Http</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Slim_Http_Body" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Body.html">Body</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Cookies" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Cookies.html">Cookies</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Environment" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Environment.html">Environment</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Headers" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Headers.html">Headers</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Message" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Message.html">Message</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Request" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Request.html">Request</a>                    </div>                </li>                            <li data-name="class:Slim_Http_RequestBody" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/RequestBody.html">RequestBody</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Response" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Response.html">Response</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Stream" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Stream.html">Stream</a>                    </div>                </li>                            <li data-name="class:Slim_Http_UploadedFile" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/UploadedFile.html">UploadedFile</a>                    </div>                </li>                            <li data-name="class:Slim_Http_Uri" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Http/Uri.html">Uri</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Slim_Interfaces" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Interfaces.html">Interfaces</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Slim_Interfaces_Http" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Slim/Interfaces/Http.html">Http</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Slim_Interfaces_Http_CookiesInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Slim/Interfaces/Http/CookiesInterface.html">CookiesInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_Http_EnvironmentInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Slim/Interfaces/Http/EnvironmentInterface.html">EnvironmentInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_Http_HeadersInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Slim/Interfaces/Http/HeadersInterface.html">HeadersInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Slim_Interfaces_CallableResolverInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/CallableResolverInterface.html">CallableResolverInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_CollectionInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/CollectionInterface.html">CollectionInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_InvocationStrategyInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/InvocationStrategyInterface.html">InvocationStrategyInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_RouteGroupInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/RouteGroupInterface.html">RouteGroupInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_RouteInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/RouteInterface.html">RouteInterface</a>                    </div>                </li>                            <li data-name="class:Slim_Interfaces_RouterInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Slim/Interfaces/RouterInterface.html">RouterInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Slim_App" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/App.html">App</a>                    </div>                </li>                            <li data-name="class:Slim_CallableResolver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/CallableResolver.html">CallableResolver</a>                    </div>                </li>                            <li data-name="class:Slim_CallableResolverAwareTrait" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/CallableResolverAwareTrait.html">CallableResolverAwareTrait</a>                    </div>                </li>                            <li data-name="class:Slim_Collection" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:Slim_Container" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/Container.html">Container</a>                    </div>                </li>                            <li data-name="class:Slim_DefaultServicesProvider" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/DefaultServicesProvider.html">DefaultServicesProvider</a>                    </div>                </li>                            <li data-name="class:Slim_DeferredCallable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/DeferredCallable.html">DeferredCallable</a>                    </div>                </li>                            <li data-name="class:Slim_MiddlewareAwareTrait" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/MiddlewareAwareTrait.html">MiddlewareAwareTrait</a>                    </div>                </li>                            <li data-name="class:Slim_Routable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/Routable.html">Routable</a>                    </div>                </li>                            <li data-name="class:Slim_Route" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/Route.html">Route</a>                    </div>                </li>                            <li data-name="class:Slim_RouteGroup" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/RouteGroup.html">RouteGroup</a>                    </div>                </li>                            <li data-name="class:Slim_Router" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Slim/Router.html">Router</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Slim.html", "name": "Slim", "doc": "Namespace Slim"},{"type": "Namespace", "link": "Slim/Exception.html", "name": "Slim\\Exception", "doc": "Namespace Slim\\Exception"},{"type": "Namespace", "link": "Slim/Handlers.html", "name": "Slim\\Handlers", "doc": "Namespace Slim\\Handlers"},{"type": "Namespace", "link": "Slim/Handlers/Strategies.html", "name": "Slim\\Handlers\\Strategies", "doc": "Namespace Slim\\Handlers\\Strategies"},{"type": "Namespace", "link": "Slim/Http.html", "name": "Slim\\Http", "doc": "Namespace Slim\\Http"},{"type": "Namespace", "link": "Slim/Interfaces.html", "name": "Slim\\Interfaces", "doc": "Namespace Slim\\Interfaces"},{"type": "Namespace", "link": "Slim/Interfaces/Http.html", "name": "Slim\\Interfaces\\Http", "doc": "Namespace Slim\\Interfaces\\Http"},
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/CallableResolverInterface.html", "name": "Slim\\Interfaces\\CallableResolverInterface", "doc": "&quot;Resolves a callable.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\CallableResolverInterface", "fromLink": "Slim/Interfaces/CallableResolverInterface.html", "link": "Slim/Interfaces/CallableResolverInterface.html#method_resolve", "name": "Slim\\Interfaces\\CallableResolverInterface::resolve", "doc": "&quot;Invoke the resolved callable.&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/CollectionInterface.html", "name": "Slim\\Interfaces\\CollectionInterface", "doc": "&quot;Collection Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_set", "name": "Slim\\Interfaces\\CollectionInterface::set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_get", "name": "Slim\\Interfaces\\CollectionInterface::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_replace", "name": "Slim\\Interfaces\\CollectionInterface::replace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_all", "name": "Slim\\Interfaces\\CollectionInterface::all", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_has", "name": "Slim\\Interfaces\\CollectionInterface::has", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_remove", "name": "Slim\\Interfaces\\CollectionInterface::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_clear", "name": "Slim\\Interfaces\\CollectionInterface::clear", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/CookiesInterface.html", "name": "Slim\\Interfaces\\Http\\CookiesInterface", "doc": "&quot;Cookies Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_get", "name": "Slim\\Interfaces\\Http\\CookiesInterface::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_set", "name": "Slim\\Interfaces\\Http\\CookiesInterface::set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_toHeaders", "name": "Slim\\Interfaces\\Http\\CookiesInterface::toHeaders", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_parseHeader", "name": "Slim\\Interfaces\\Http\\CookiesInterface::parseHeader", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/EnvironmentInterface.html", "name": "Slim\\Interfaces\\Http\\EnvironmentInterface", "doc": "&quot;Environment Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\EnvironmentInterface", "fromLink": "Slim/Interfaces/Http/EnvironmentInterface.html", "link": "Slim/Interfaces/Http/EnvironmentInterface.html#method_mock", "name": "Slim\\Interfaces\\Http\\EnvironmentInterface::mock", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/HeadersInterface.html", "name": "Slim\\Interfaces\\Http\\HeadersInterface", "doc": "&quot;Headers Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\HeadersInterface", "fromLink": "Slim/Interfaces/Http/HeadersInterface.html", "link": "Slim/Interfaces/Http/HeadersInterface.html#method_add", "name": "Slim\\Interfaces\\Http\\HeadersInterface::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\HeadersInterface", "fromLink": "Slim/Interfaces/Http/HeadersInterface.html", "link": "Slim/Interfaces/Http/HeadersInterface.html#method_normalizeKey", "name": "Slim\\Interfaces\\Http\\HeadersInterface::normalizeKey", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/InvocationStrategyInterface.html", "name": "Slim\\Interfaces\\InvocationStrategyInterface", "doc": "&quot;Defines a contract for invoking a route callable.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\InvocationStrategyInterface", "fromLink": "Slim/Interfaces/InvocationStrategyInterface.html", "link": "Slim/Interfaces/InvocationStrategyInterface.html#method___invoke", "name": "Slim\\Interfaces\\InvocationStrategyInterface::__invoke", "doc": "&quot;Invoke a route callable.&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouteGroupInterface.html", "name": "Slim\\Interfaces\\RouteGroupInterface", "doc": "&quot;RouteGroup Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method_getPattern", "name": "Slim\\Interfaces\\RouteGroupInterface::getPattern", "doc": "&quot;Get route pattern&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method_add", "name": "Slim\\Interfaces\\RouteGroupInterface::add", "doc": "&quot;Prepend middleware to the group middleware collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method___invoke", "name": "Slim\\Interfaces\\RouteGroupInterface::__invoke", "doc": "&quot;Execute route group callable in the context of the Slim App&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouteInterface.html", "name": "Slim\\Interfaces\\RouteInterface", "doc": "&quot;Route Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getArgument", "name": "Slim\\Interfaces\\RouteInterface::getArgument", "doc": "&quot;Retrieve a specific route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getArguments", "name": "Slim\\Interfaces\\RouteInterface::getArguments", "doc": "&quot;Get route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getName", "name": "Slim\\Interfaces\\RouteInterface::getName", "doc": "&quot;Get route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getPattern", "name": "Slim\\Interfaces\\RouteInterface::getPattern", "doc": "&quot;Get route pattern&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setArgument", "name": "Slim\\Interfaces\\RouteInterface::setArgument", "doc": "&quot;Set a route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setArguments", "name": "Slim\\Interfaces\\RouteInterface::setArguments", "doc": "&quot;Replace route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setName", "name": "Slim\\Interfaces\\RouteInterface::setName", "doc": "&quot;Set route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_add", "name": "Slim\\Interfaces\\RouteInterface::add", "doc": "&quot;Add middleware&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_prepare", "name": "Slim\\Interfaces\\RouteInterface::prepare", "doc": "&quot;Prepare the route for use&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_run", "name": "Slim\\Interfaces\\RouteInterface::run", "doc": "&quot;Run route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method___invoke", "name": "Slim\\Interfaces\\RouteInterface::__invoke", "doc": "&quot;Dispatch route callable against current Request and Response objects&quot;"},
            
            {"type": "Interface", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouterInterface.html", "name": "Slim\\Interfaces\\RouterInterface", "doc": "&quot;Router Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_map", "name": "Slim\\Interfaces\\RouterInterface::map", "doc": "&quot;Add route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_dispatch", "name": "Slim\\Interfaces\\RouterInterface::dispatch", "doc": "&quot;Dispatch router for HTTP request&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_pushGroup", "name": "Slim\\Interfaces\\RouterInterface::pushGroup", "doc": "&quot;Add a route group to the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_popGroup", "name": "Slim\\Interfaces\\RouterInterface::popGroup", "doc": "&quot;Removes the last route group from the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_getNamedRoute", "name": "Slim\\Interfaces\\RouterInterface::getNamedRoute", "doc": "&quot;Get named route object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_lookupRoute", "name": "Slim\\Interfaces\\RouterInterface::lookupRoute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_relativePathFor", "name": "Slim\\Interfaces\\RouterInterface::relativePathFor", "doc": "&quot;Build the path for a named route excluding the base path&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_pathFor", "name": "Slim\\Interfaces\\RouterInterface::pathFor", "doc": "&quot;Build the path for a named route including the base path&quot;"},
            
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/App.html", "name": "Slim\\App", "doc": "&quot;App&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method___construct", "name": "Slim\\App::__construct", "doc": "&quot;Create new application&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_getContainer", "name": "Slim\\App::getContainer", "doc": "&quot;Enable access to the DI container by consumers of $app&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_add", "name": "Slim\\App::add", "doc": "&quot;Add middleware&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method___call", "name": "Slim\\App::__call", "doc": "&quot;Calling a non-existant method on App checks to see if there&#039;s an item\nin the container that is callable and if so, calls it.&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_get", "name": "Slim\\App::get", "doc": "&quot;Add GET route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_post", "name": "Slim\\App::post", "doc": "&quot;Add POST route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_put", "name": "Slim\\App::put", "doc": "&quot;Add PUT route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_patch", "name": "Slim\\App::patch", "doc": "&quot;Add PATCH route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_delete", "name": "Slim\\App::delete", "doc": "&quot;Add DELETE route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_options", "name": "Slim\\App::options", "doc": "&quot;Add OPTIONS route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_any", "name": "Slim\\App::any", "doc": "&quot;Add route for any HTTP method&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_map", "name": "Slim\\App::map", "doc": "&quot;Add route with multiple methods&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_group", "name": "Slim\\App::group", "doc": "&quot;Route Groups&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_run", "name": "Slim\\App::run", "doc": "&quot;Run application&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_process", "name": "Slim\\App::process", "doc": "&quot;Process a request&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_respond", "name": "Slim\\App::respond", "doc": "&quot;Send the response the client&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method___invoke", "name": "Slim\\App::__invoke", "doc": "&quot;Invoke application&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_subRequest", "name": "Slim\\App::subRequest", "doc": "&quot;Perform a sub-request from within an application route&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_dispatchRouterAndPrepareRoute", "name": "Slim\\App::dispatchRouterAndPrepareRoute", "doc": "&quot;Dispatch the router to find the route. Prepare the route for use.&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_finalize", "name": "Slim\\App::finalize", "doc": "&quot;Finalize response&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_isEmptyResponse", "name": "Slim\\App::isEmptyResponse", "doc": "&quot;Helper method, which returns true if the provided response must not output a body and false\nif the response could have a body.&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_handleException", "name": "Slim\\App::handleException", "doc": "&quot;Call relevant handler from the Container if needed. If it doesn&#039;t exist,\nthen just re-throw.&quot;"},
                    {"type": "Method", "fromName": "Slim\\App", "fromLink": "Slim/App.html", "link": "Slim/App.html#method_handlePhpError", "name": "Slim\\App::handlePhpError", "doc": "&quot;Call relevant handler from the Container if needed. If it doesn&#039;t exist,\nthen just re-throw.&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/CallableResolver.html", "name": "Slim\\CallableResolver", "doc": "&quot;This class resolves a string of the format &#039;class:method&#039; into a closure\nthat can be dispatched.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\CallableResolver", "fromLink": "Slim/CallableResolver.html", "link": "Slim/CallableResolver.html#method___construct", "name": "Slim\\CallableResolver::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\CallableResolver", "fromLink": "Slim/CallableResolver.html", "link": "Slim/CallableResolver.html#method_resolve", "name": "Slim\\CallableResolver::resolve", "doc": "&quot;Resolve toResolve into a closure that that the router can dispatch.&quot;"},
            
            {"type": "Trait", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/CallableResolverAwareTrait.html", "name": "Slim\\CallableResolverAwareTrait", "doc": "&quot;ResolveCallable&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\CallableResolverAwareTrait", "fromLink": "Slim/CallableResolverAwareTrait.html", "link": "Slim/CallableResolverAwareTrait.html#method_resolveCallable", "name": "Slim\\CallableResolverAwareTrait::resolveCallable", "doc": "&quot;Resolve a string of the format &#039;class:method&#039; into a closure that the\nrouter can dispatch.&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/Collection.html", "name": "Slim\\Collection", "doc": "&quot;Collection&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method___construct", "name": "Slim\\Collection::__construct", "doc": "&quot;Create new collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_set", "name": "Slim\\Collection::set", "doc": "&quot;Set collection item&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_get", "name": "Slim\\Collection::get", "doc": "&quot;Get collection item for key&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_replace", "name": "Slim\\Collection::replace", "doc": "&quot;Add item to collection, replacing existing items with the same data key&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_all", "name": "Slim\\Collection::all", "doc": "&quot;Get all items in collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_keys", "name": "Slim\\Collection::keys", "doc": "&quot;Get collection keys&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_has", "name": "Slim\\Collection::has", "doc": "&quot;Does this collection have a given key?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_remove", "name": "Slim\\Collection::remove", "doc": "&quot;Remove item from collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_clear", "name": "Slim\\Collection::clear", "doc": "&quot;Remove all items from collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_offsetExists", "name": "Slim\\Collection::offsetExists", "doc": "&quot;Does this collection have a given key?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_offsetGet", "name": "Slim\\Collection::offsetGet", "doc": "&quot;Get collection item for key&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_offsetSet", "name": "Slim\\Collection::offsetSet", "doc": "&quot;Set collection item&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_offsetUnset", "name": "Slim\\Collection::offsetUnset", "doc": "&quot;Remove item from collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_count", "name": "Slim\\Collection::count", "doc": "&quot;Get number of items in collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Collection", "fromLink": "Slim/Collection.html", "link": "Slim/Collection.html#method_getIterator", "name": "Slim\\Collection::getIterator", "doc": "&quot;Get collection iterator&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/Container.html", "name": "Slim\\Container", "doc": "&quot;Slim&#039;s default DI container is Pimple.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Container", "fromLink": "Slim/Container.html", "link": "Slim/Container.html#method___construct", "name": "Slim\\Container::__construct", "doc": "&quot;Create new container&quot;"},
                    {"type": "Method", "fromName": "Slim\\Container", "fromLink": "Slim/Container.html", "link": "Slim/Container.html#method_get", "name": "Slim\\Container::get", "doc": "&quot;Finds an entry of the container by its identifier and returns it.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Container", "fromLink": "Slim/Container.html", "link": "Slim/Container.html#method_has", "name": "Slim\\Container::has", "doc": "&quot;Returns true if the container can return an entry for the given identifier.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Container", "fromLink": "Slim/Container.html", "link": "Slim/Container.html#method___get", "name": "Slim\\Container::__get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Container", "fromLink": "Slim/Container.html", "link": "Slim/Container.html#method___isset", "name": "Slim\\Container::__isset", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/DefaultServicesProvider.html", "name": "Slim\\DefaultServicesProvider", "doc": "&quot;Slim&#039;s default Service Provider.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\DefaultServicesProvider", "fromLink": "Slim/DefaultServicesProvider.html", "link": "Slim/DefaultServicesProvider.html#method_register", "name": "Slim\\DefaultServicesProvider::register", "doc": "&quot;Register Slim&#039;s default services.&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/DeferredCallable.html", "name": "Slim\\DeferredCallable", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\DeferredCallable", "fromLink": "Slim/DeferredCallable.html", "link": "Slim/DeferredCallable.html#method___construct", "name": "Slim\\DeferredCallable::__construct", "doc": "&quot;DeferredMiddleware constructor.&quot;"},
                    {"type": "Method", "fromName": "Slim\\DeferredCallable", "fromLink": "Slim/DeferredCallable.html", "link": "Slim/DeferredCallable.html#method___invoke", "name": "Slim\\DeferredCallable::__invoke", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Exception", "fromLink": "Slim/Exception.html", "link": "Slim/Exception/ContainerException.html", "name": "Slim\\Exception\\ContainerException", "doc": "&quot;Container Exception&quot;"},
                    
            {"type": "Class", "fromName": "Slim\\Exception", "fromLink": "Slim/Exception.html", "link": "Slim/Exception/ContainerValueNotFoundException.html", "name": "Slim\\Exception\\ContainerValueNotFoundException", "doc": "&quot;Not Found Exception&quot;"},
                    
            {"type": "Class", "fromName": "Slim\\Exception", "fromLink": "Slim/Exception.html", "link": "Slim/Exception/MethodNotAllowedException.html", "name": "Slim\\Exception\\MethodNotAllowedException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Exception\\MethodNotAllowedException", "fromLink": "Slim/Exception/MethodNotAllowedException.html", "link": "Slim/Exception/MethodNotAllowedException.html#method___construct", "name": "Slim\\Exception\\MethodNotAllowedException::__construct", "doc": "&quot;Create new exception&quot;"},
                    {"type": "Method", "fromName": "Slim\\Exception\\MethodNotAllowedException", "fromLink": "Slim/Exception/MethodNotAllowedException.html", "link": "Slim/Exception/MethodNotAllowedException.html#method_getAllowedMethods", "name": "Slim\\Exception\\MethodNotAllowedException::getAllowedMethods", "doc": "&quot;Get allowed methods&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Exception", "fromLink": "Slim/Exception.html", "link": "Slim/Exception/NotFoundException.html", "name": "Slim\\Exception\\NotFoundException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Slim\\Exception", "fromLink": "Slim/Exception.html", "link": "Slim/Exception/SlimException.html", "name": "Slim\\Exception\\SlimException", "doc": "&quot;Stop Exception&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Exception\\SlimException", "fromLink": "Slim/Exception/SlimException.html", "link": "Slim/Exception/SlimException.html#method___construct", "name": "Slim\\Exception\\SlimException::__construct", "doc": "&quot;Create new exception&quot;"},
                    {"type": "Method", "fromName": "Slim\\Exception\\SlimException", "fromLink": "Slim/Exception/SlimException.html", "link": "Slim/Exception/SlimException.html#method_getRequest", "name": "Slim\\Exception\\SlimException::getRequest", "doc": "&quot;Get request&quot;"},
                    {"type": "Method", "fromName": "Slim\\Exception\\SlimException", "fromLink": "Slim/Exception/SlimException.html", "link": "Slim/Exception/SlimException.html#method_getResponse", "name": "Slim\\Exception\\SlimException::getResponse", "doc": "&quot;Get response&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/AbstractError.html", "name": "Slim\\Handlers\\AbstractError", "doc": "&quot;Abstract Slim application error handler&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\AbstractError", "fromLink": "Slim/Handlers/AbstractError.html", "link": "Slim/Handlers/AbstractError.html#method___construct", "name": "Slim\\Handlers\\AbstractError::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\AbstractError", "fromLink": "Slim/Handlers/AbstractError.html", "link": "Slim/Handlers/AbstractError.html#method_writeToErrorLog", "name": "Slim\\Handlers\\AbstractError::writeToErrorLog", "doc": "&quot;Write to the error log if displayErrorDetails is false&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\AbstractError", "fromLink": "Slim/Handlers/AbstractError.html", "link": "Slim/Handlers/AbstractError.html#method_renderThrowableAsText", "name": "Slim\\Handlers\\AbstractError::renderThrowableAsText", "doc": "&quot;Render error as Text.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\AbstractError", "fromLink": "Slim/Handlers/AbstractError.html", "link": "Slim/Handlers/AbstractError.html#method_logError", "name": "Slim\\Handlers\\AbstractError::logError", "doc": "&quot;Wraps the error_log function so that this can be easily tested&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/AbstractHandler.html", "name": "Slim\\Handlers\\AbstractHandler", "doc": "&quot;Abstract Slim application handler&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\AbstractHandler", "fromLink": "Slim/Handlers/AbstractHandler.html", "link": "Slim/Handlers/AbstractHandler.html#method_determineContentType", "name": "Slim\\Handlers\\AbstractHandler::determineContentType", "doc": "&quot;Determine which content type we know about is wanted using Accept header&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/Error.html", "name": "Slim\\Handlers\\Error", "doc": "&quot;Default Slim application error handler&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\Error", "fromLink": "Slim/Handlers/Error.html", "link": "Slim/Handlers/Error.html#method___invoke", "name": "Slim\\Handlers\\Error::__invoke", "doc": "&quot;Invoke error handler&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\Error", "fromLink": "Slim/Handlers/Error.html", "link": "Slim/Handlers/Error.html#method_renderHtmlErrorMessage", "name": "Slim\\Handlers\\Error::renderHtmlErrorMessage", "doc": "&quot;Render HTML error page&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\Error", "fromLink": "Slim/Handlers/Error.html", "link": "Slim/Handlers/Error.html#method_renderHtmlException", "name": "Slim\\Handlers\\Error::renderHtmlException", "doc": "&quot;Render exception as HTML.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\Error", "fromLink": "Slim/Handlers/Error.html", "link": "Slim/Handlers/Error.html#method_renderJsonErrorMessage", "name": "Slim\\Handlers\\Error::renderJsonErrorMessage", "doc": "&quot;Render JSON error&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\Error", "fromLink": "Slim/Handlers/Error.html", "link": "Slim/Handlers/Error.html#method_renderXmlErrorMessage", "name": "Slim\\Handlers\\Error::renderXmlErrorMessage", "doc": "&quot;Render XML error&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/NotAllowed.html", "name": "Slim\\Handlers\\NotAllowed", "doc": "&quot;Default Slim application not allowed handler&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\NotAllowed", "fromLink": "Slim/Handlers/NotAllowed.html", "link": "Slim/Handlers/NotAllowed.html#method___invoke", "name": "Slim\\Handlers\\NotAllowed::__invoke", "doc": "&quot;Invoke error handler&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotAllowed", "fromLink": "Slim/Handlers/NotAllowed.html", "link": "Slim/Handlers/NotAllowed.html#method_renderPlainNotAllowedMessage", "name": "Slim\\Handlers\\NotAllowed::renderPlainNotAllowedMessage", "doc": "&quot;Render PLAIN not allowed message&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotAllowed", "fromLink": "Slim/Handlers/NotAllowed.html", "link": "Slim/Handlers/NotAllowed.html#method_renderJsonNotAllowedMessage", "name": "Slim\\Handlers\\NotAllowed::renderJsonNotAllowedMessage", "doc": "&quot;Render JSON not allowed message&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotAllowed", "fromLink": "Slim/Handlers/NotAllowed.html", "link": "Slim/Handlers/NotAllowed.html#method_renderXmlNotAllowedMessage", "name": "Slim\\Handlers\\NotAllowed::renderXmlNotAllowedMessage", "doc": "&quot;Render XML not allowed message&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotAllowed", "fromLink": "Slim/Handlers/NotAllowed.html", "link": "Slim/Handlers/NotAllowed.html#method_renderHtmlNotAllowedMessage", "name": "Slim\\Handlers\\NotAllowed::renderHtmlNotAllowedMessage", "doc": "&quot;Render HTML not allowed message&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/NotFound.html", "name": "Slim\\Handlers\\NotFound", "doc": "&quot;Default Slim application not found handler.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\NotFound", "fromLink": "Slim/Handlers/NotFound.html", "link": "Slim/Handlers/NotFound.html#method___invoke", "name": "Slim\\Handlers\\NotFound::__invoke", "doc": "&quot;Invoke not found handler&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotFound", "fromLink": "Slim/Handlers/NotFound.html", "link": "Slim/Handlers/NotFound.html#method_renderJsonNotFoundOutput", "name": "Slim\\Handlers\\NotFound::renderJsonNotFoundOutput", "doc": "&quot;Return a response for application\/json content not found&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotFound", "fromLink": "Slim/Handlers/NotFound.html", "link": "Slim/Handlers/NotFound.html#method_renderXmlNotFoundOutput", "name": "Slim\\Handlers\\NotFound::renderXmlNotFoundOutput", "doc": "&quot;Return a response for xml content not found&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\NotFound", "fromLink": "Slim/Handlers/NotFound.html", "link": "Slim/Handlers/NotFound.html#method_renderHtmlNotFoundOutput", "name": "Slim\\Handlers\\NotFound::renderHtmlNotFoundOutput", "doc": "&quot;Return a response for text\/html content not found&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers", "fromLink": "Slim/Handlers.html", "link": "Slim/Handlers/PhpError.html", "name": "Slim\\Handlers\\PhpError", "doc": "&quot;Default Slim application error handler for PHP 7+ Throwables&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\PhpError", "fromLink": "Slim/Handlers/PhpError.html", "link": "Slim/Handlers/PhpError.html#method___invoke", "name": "Slim\\Handlers\\PhpError::__invoke", "doc": "&quot;Invoke error handler&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\PhpError", "fromLink": "Slim/Handlers/PhpError.html", "link": "Slim/Handlers/PhpError.html#method_renderHtmlErrorMessage", "name": "Slim\\Handlers\\PhpError::renderHtmlErrorMessage", "doc": "&quot;Render HTML error page&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\PhpError", "fromLink": "Slim/Handlers/PhpError.html", "link": "Slim/Handlers/PhpError.html#method_renderHtmlError", "name": "Slim\\Handlers\\PhpError::renderHtmlError", "doc": "&quot;Render error as HTML.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\PhpError", "fromLink": "Slim/Handlers/PhpError.html", "link": "Slim/Handlers/PhpError.html#method_renderJsonErrorMessage", "name": "Slim\\Handlers\\PhpError::renderJsonErrorMessage", "doc": "&quot;Render JSON error&quot;"},
                    {"type": "Method", "fromName": "Slim\\Handlers\\PhpError", "fromLink": "Slim/Handlers/PhpError.html", "link": "Slim/Handlers/PhpError.html#method_renderXmlErrorMessage", "name": "Slim\\Handlers\\PhpError::renderXmlErrorMessage", "doc": "&quot;Render XML error&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers\\Strategies", "fromLink": "Slim/Handlers/Strategies.html", "link": "Slim/Handlers/Strategies/RequestResponse.html", "name": "Slim\\Handlers\\Strategies\\RequestResponse", "doc": "&quot;Default route callback strategy with route parameters as an array of arguments.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\Strategies\\RequestResponse", "fromLink": "Slim/Handlers/Strategies/RequestResponse.html", "link": "Slim/Handlers/Strategies/RequestResponse.html#method___invoke", "name": "Slim\\Handlers\\Strategies\\RequestResponse::__invoke", "doc": "&quot;Invoke a route callable with request, response, and all route parameters\nas an array of arguments.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Handlers\\Strategies", "fromLink": "Slim/Handlers/Strategies.html", "link": "Slim/Handlers/Strategies/RequestResponseArgs.html", "name": "Slim\\Handlers\\Strategies\\RequestResponseArgs", "doc": "&quot;Route callback strategy with route parameters as individual arguments.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Handlers\\Strategies\\RequestResponseArgs", "fromLink": "Slim/Handlers/Strategies/RequestResponseArgs.html", "link": "Slim/Handlers/Strategies/RequestResponseArgs.html#method___invoke", "name": "Slim\\Handlers\\Strategies\\RequestResponseArgs::__invoke", "doc": "&quot;Invoke a route callable with request, response and all route parameters\nas individual arguments.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Body.html", "name": "Slim\\Http\\Body", "doc": "&quot;Body&quot;"},
                    
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Cookies.html", "name": "Slim\\Http\\Cookies", "doc": "&quot;Cookie helper&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method___construct", "name": "Slim\\Http\\Cookies::__construct", "doc": "&quot;Create new cookies helper&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_setDefaults", "name": "Slim\\Http\\Cookies::setDefaults", "doc": "&quot;Set default cookie properties&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_get", "name": "Slim\\Http\\Cookies::get", "doc": "&quot;Get request cookie&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_set", "name": "Slim\\Http\\Cookies::set", "doc": "&quot;Set response cookie&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_toHeaders", "name": "Slim\\Http\\Cookies::toHeaders", "doc": "&quot;Convert to &lt;code&gt;Set-Cookie&lt;\/code&gt; headers&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_toHeader", "name": "Slim\\Http\\Cookies::toHeader", "doc": "&quot;Convert to &lt;code&gt;Set-Cookie&lt;\/code&gt; header&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Cookies", "fromLink": "Slim/Http/Cookies.html", "link": "Slim/Http/Cookies.html#method_parseHeader", "name": "Slim\\Http\\Cookies::parseHeader", "doc": "&quot;Parse HTTP request &lt;code&gt;Cookie:&lt;\/code&gt; header and extract\ninto a PHP associative array.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Environment.html", "name": "Slim\\Http\\Environment", "doc": "&quot;Environment&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Environment", "fromLink": "Slim/Http/Environment.html", "link": "Slim/Http/Environment.html#method_mock", "name": "Slim\\Http\\Environment::mock", "doc": "&quot;Create mock environment&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Headers.html", "name": "Slim\\Http\\Headers", "doc": "&quot;Headers&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_createFromEnvironment", "name": "Slim\\Http\\Headers::createFromEnvironment", "doc": "&quot;Create new headers collection with data extracted from\nthe application Environment object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_determineAuthorization", "name": "Slim\\Http\\Headers::determineAuthorization", "doc": "&quot;If HTTP_AUTHORIZATION does not exist tries to get it from\ngetallheaders() when available.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_all", "name": "Slim\\Http\\Headers::all", "doc": "&quot;Return array of HTTP header names and values.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_set", "name": "Slim\\Http\\Headers::set", "doc": "&quot;Set HTTP header value&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_get", "name": "Slim\\Http\\Headers::get", "doc": "&quot;Get HTTP header value&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_getOriginalKey", "name": "Slim\\Http\\Headers::getOriginalKey", "doc": "&quot;Get HTTP header key as originally specified&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_add", "name": "Slim\\Http\\Headers::add", "doc": "&quot;Add HTTP header value&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_has", "name": "Slim\\Http\\Headers::has", "doc": "&quot;Does this collection have a given header?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_remove", "name": "Slim\\Http\\Headers::remove", "doc": "&quot;Remove header from collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Headers", "fromLink": "Slim/Http/Headers.html", "link": "Slim/Http/Headers.html#method_normalizeKey", "name": "Slim\\Http\\Headers::normalizeKey", "doc": "&quot;Normalize header name&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Message.html", "name": "Slim\\Http\\Message", "doc": "&quot;Abstract message (base class for Request and Response)&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method___set", "name": "Slim\\Http\\Message::__set", "doc": "&quot;Disable magic setter to ensure immutability&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_getProtocolVersion", "name": "Slim\\Http\\Message::getProtocolVersion", "doc": "&quot;Retrieves the HTTP protocol version as a string.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_withProtocolVersion", "name": "Slim\\Http\\Message::withProtocolVersion", "doc": "&quot;Return an instance with the specified HTTP protocol version.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_getHeaders", "name": "Slim\\Http\\Message::getHeaders", "doc": "&quot;Retrieves all message header values.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_hasHeader", "name": "Slim\\Http\\Message::hasHeader", "doc": "&quot;Checks if a header exists by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_getHeader", "name": "Slim\\Http\\Message::getHeader", "doc": "&quot;Retrieves a message header value by the given case-insensitive name.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_getHeaderLine", "name": "Slim\\Http\\Message::getHeaderLine", "doc": "&quot;Retrieves a comma-separated string of the values for a single header.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_withHeader", "name": "Slim\\Http\\Message::withHeader", "doc": "&quot;Return an instance with the provided value replacing the specified header.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_withAddedHeader", "name": "Slim\\Http\\Message::withAddedHeader", "doc": "&quot;Return an instance with the specified header appended with the given value.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_withoutHeader", "name": "Slim\\Http\\Message::withoutHeader", "doc": "&quot;Return an instance without the specified header.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_getBody", "name": "Slim\\Http\\Message::getBody", "doc": "&quot;Gets the body of the message.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Message", "fromLink": "Slim/Http/Message.html", "link": "Slim/Http/Message.html#method_withBody", "name": "Slim\\Http\\Message::withBody", "doc": "&quot;Return an instance with the specified message body.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Request.html", "name": "Slim\\Http\\Request", "doc": "&quot;Request&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_createFromEnvironment", "name": "Slim\\Http\\Request::createFromEnvironment", "doc": "&quot;Create new HTTP request with data extracted from the application\nEnvironment object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method___construct", "name": "Slim\\Http\\Request::__construct", "doc": "&quot;Create new HTTP request.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method___clone", "name": "Slim\\Http\\Request::__clone", "doc": "&quot;This method is applied to the cloned object\nafter PHP performs an initial shallow-copy. This\nmethod completes a deep-copy by creating new objects\nfor the cloned object&#039;s internal reference pointers.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getMethod", "name": "Slim\\Http\\Request::getMethod", "doc": "&quot;Retrieves the HTTP method of the request.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getOriginalMethod", "name": "Slim\\Http\\Request::getOriginalMethod", "doc": "&quot;Get the original HTTP method (ignore override).&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withMethod", "name": "Slim\\Http\\Request::withMethod", "doc": "&quot;Return an instance with the provided HTTP method.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_filterMethod", "name": "Slim\\Http\\Request::filterMethod", "doc": "&quot;Validate the HTTP method&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isMethod", "name": "Slim\\Http\\Request::isMethod", "doc": "&quot;Does this request use a given method?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isGet", "name": "Slim\\Http\\Request::isGet", "doc": "&quot;Is this a GET request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isPost", "name": "Slim\\Http\\Request::isPost", "doc": "&quot;Is this a POST request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isPut", "name": "Slim\\Http\\Request::isPut", "doc": "&quot;Is this a PUT request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isPatch", "name": "Slim\\Http\\Request::isPatch", "doc": "&quot;Is this a PATCH request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isDelete", "name": "Slim\\Http\\Request::isDelete", "doc": "&quot;Is this a DELETE request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isHead", "name": "Slim\\Http\\Request::isHead", "doc": "&quot;Is this a HEAD request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isOptions", "name": "Slim\\Http\\Request::isOptions", "doc": "&quot;Is this a OPTIONS request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_isXhr", "name": "Slim\\Http\\Request::isXhr", "doc": "&quot;Is this an XHR request?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getRequestTarget", "name": "Slim\\Http\\Request::getRequestTarget", "doc": "&quot;Retrieves the message&#039;s request target.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withRequestTarget", "name": "Slim\\Http\\Request::withRequestTarget", "doc": "&quot;Return an instance with the specific request-target.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getUri", "name": "Slim\\Http\\Request::getUri", "doc": "&quot;Retrieves the URI instance.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withUri", "name": "Slim\\Http\\Request::withUri", "doc": "&quot;Returns an instance with the provided URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getContentType", "name": "Slim\\Http\\Request::getContentType", "doc": "&quot;Get request content type.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getMediaType", "name": "Slim\\Http\\Request::getMediaType", "doc": "&quot;Get request media type, if known.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getMediaTypeParams", "name": "Slim\\Http\\Request::getMediaTypeParams", "doc": "&quot;Get request media type params, if known.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getContentCharset", "name": "Slim\\Http\\Request::getContentCharset", "doc": "&quot;Get request content character set, if known.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getContentLength", "name": "Slim\\Http\\Request::getContentLength", "doc": "&quot;Get request content length, if known.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getCookieParams", "name": "Slim\\Http\\Request::getCookieParams", "doc": "&quot;Retrieve cookies.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getCookieParam", "name": "Slim\\Http\\Request::getCookieParam", "doc": "&quot;Fetch cookie value from cookies sent by the client to the server.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withCookieParams", "name": "Slim\\Http\\Request::withCookieParams", "doc": "&quot;Return an instance with the specified cookies.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getQueryParams", "name": "Slim\\Http\\Request::getQueryParams", "doc": "&quot;Retrieve query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withQueryParams", "name": "Slim\\Http\\Request::withQueryParams", "doc": "&quot;Return an instance with the specified query string arguments.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getUploadedFiles", "name": "Slim\\Http\\Request::getUploadedFiles", "doc": "&quot;Retrieve normalized file upload data.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withUploadedFiles", "name": "Slim\\Http\\Request::withUploadedFiles", "doc": "&quot;Create a new instance with the specified uploaded files.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getServerParams", "name": "Slim\\Http\\Request::getServerParams", "doc": "&quot;Retrieve server parameters.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getServerParam", "name": "Slim\\Http\\Request::getServerParam", "doc": "&quot;Retrieve a server parameter.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getAttributes", "name": "Slim\\Http\\Request::getAttributes", "doc": "&quot;Retrieve attributes derived from the request.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getAttribute", "name": "Slim\\Http\\Request::getAttribute", "doc": "&quot;Retrieve a single derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withAttribute", "name": "Slim\\Http\\Request::withAttribute", "doc": "&quot;Return an instance with the specified derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withAttributes", "name": "Slim\\Http\\Request::withAttributes", "doc": "&quot;Create a new instance with the specified derived request attributes.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withoutAttribute", "name": "Slim\\Http\\Request::withoutAttribute", "doc": "&quot;Return an instance that removes the specified derived request attribute.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getParsedBody", "name": "Slim\\Http\\Request::getParsedBody", "doc": "&quot;Retrieve any parameters provided in the request body.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_withParsedBody", "name": "Slim\\Http\\Request::withParsedBody", "doc": "&quot;Return an instance with the specified body parameters.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_reparseBody", "name": "Slim\\Http\\Request::reparseBody", "doc": "&quot;Force Body to be parsed again.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_registerMediaTypeParser", "name": "Slim\\Http\\Request::registerMediaTypeParser", "doc": "&quot;Register media type parser.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getParam", "name": "Slim\\Http\\Request::getParam", "doc": "&quot;Fetch request parameter value from body or query string (in that order).&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getParsedBodyParam", "name": "Slim\\Http\\Request::getParsedBodyParam", "doc": "&quot;Fetch parameter value from request body.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getQueryParam", "name": "Slim\\Http\\Request::getQueryParam", "doc": "&quot;Fetch parameter value from query string.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Request", "fromLink": "Slim/Http/Request.html", "link": "Slim/Http/Request.html#method_getParams", "name": "Slim\\Http\\Request::getParams", "doc": "&quot;Fetch assocative array of body and query string parameters.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/RequestBody.html", "name": "Slim\\Http\\RequestBody", "doc": "&quot;Provides a PSR-7 implementation of a reusable raw request body&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\RequestBody", "fromLink": "Slim/Http/RequestBody.html", "link": "Slim/Http/RequestBody.html#method___construct", "name": "Slim\\Http\\RequestBody::__construct", "doc": "&quot;Create a new RequestBody.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Response.html", "name": "Slim\\Http\\Response", "doc": "&quot;Response&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method___construct", "name": "Slim\\Http\\Response::__construct", "doc": "&quot;Create new HTTP response.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method___clone", "name": "Slim\\Http\\Response::__clone", "doc": "&quot;This method is applied to the cloned object\nafter PHP performs an initial shallow-copy. This\nmethod completes a deep-copy by creating new objects\nfor the cloned object&#039;s internal reference pointers.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_getStatusCode", "name": "Slim\\Http\\Response::getStatusCode", "doc": "&quot;Gets the response status code.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_withStatus", "name": "Slim\\Http\\Response::withStatus", "doc": "&quot;Return an instance with the specified status code and, optionally, reason phrase.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_filterStatus", "name": "Slim\\Http\\Response::filterStatus", "doc": "&quot;Filter HTTP status code.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_getReasonPhrase", "name": "Slim\\Http\\Response::getReasonPhrase", "doc": "&quot;Gets the response reason phrase associated with the status code.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_write", "name": "Slim\\Http\\Response::write", "doc": "&quot;Write data to the response body.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_withRedirect", "name": "Slim\\Http\\Response::withRedirect", "doc": "&quot;Redirect.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_withJson", "name": "Slim\\Http\\Response::withJson", "doc": "&quot;Json.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isEmpty", "name": "Slim\\Http\\Response::isEmpty", "doc": "&quot;Is this response empty?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isInformational", "name": "Slim\\Http\\Response::isInformational", "doc": "&quot;Is this response informational?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isOk", "name": "Slim\\Http\\Response::isOk", "doc": "&quot;Is this response OK?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isSuccessful", "name": "Slim\\Http\\Response::isSuccessful", "doc": "&quot;Is this response successful?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isRedirect", "name": "Slim\\Http\\Response::isRedirect", "doc": "&quot;Is this response a redirect?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isRedirection", "name": "Slim\\Http\\Response::isRedirection", "doc": "&quot;Is this response a redirection?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isForbidden", "name": "Slim\\Http\\Response::isForbidden", "doc": "&quot;Is this response forbidden?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isNotFound", "name": "Slim\\Http\\Response::isNotFound", "doc": "&quot;Is this response not Found?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isClientError", "name": "Slim\\Http\\Response::isClientError", "doc": "&quot;Is this response a client error?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method_isServerError", "name": "Slim\\Http\\Response::isServerError", "doc": "&quot;Is this response a server error?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Response", "fromLink": "Slim/Http/Response.html", "link": "Slim/Http/Response.html#method___toString", "name": "Slim\\Http\\Response::__toString", "doc": "&quot;Convert response to string.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Stream.html", "name": "Slim\\Http\\Stream", "doc": "&quot;Represents a data stream as defined in PSR-7.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method___construct", "name": "Slim\\Http\\Stream::__construct", "doc": "&quot;Create a new Stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_getMetadata", "name": "Slim\\Http\\Stream::getMetadata", "doc": "&quot;Get stream metadata as an associative array or retrieve a specific key.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_isAttached", "name": "Slim\\Http\\Stream::isAttached", "doc": "&quot;Is a resource attached to this stream?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_attach", "name": "Slim\\Http\\Stream::attach", "doc": "&quot;Attach new resource to this object.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_detach", "name": "Slim\\Http\\Stream::detach", "doc": "&quot;Separates any underlying resources from the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method___toString", "name": "Slim\\Http\\Stream::__toString", "doc": "&quot;Reads all data from the stream into a string, from the beginning to end.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_close", "name": "Slim\\Http\\Stream::close", "doc": "&quot;Closes the stream and any underlying resources.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_getSize", "name": "Slim\\Http\\Stream::getSize", "doc": "&quot;Get the size of the stream if known.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_tell", "name": "Slim\\Http\\Stream::tell", "doc": "&quot;Returns the current position of the file read\/write pointer&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_eof", "name": "Slim\\Http\\Stream::eof", "doc": "&quot;Returns true if the stream is at the end of the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_isReadable", "name": "Slim\\Http\\Stream::isReadable", "doc": "&quot;Returns whether or not the stream is readable.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_isWritable", "name": "Slim\\Http\\Stream::isWritable", "doc": "&quot;Returns whether or not the stream is writable.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_isSeekable", "name": "Slim\\Http\\Stream::isSeekable", "doc": "&quot;Returns whether or not the stream is seekable.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_seek", "name": "Slim\\Http\\Stream::seek", "doc": "&quot;Seek to a position in the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_rewind", "name": "Slim\\Http\\Stream::rewind", "doc": "&quot;Seek to the beginning of the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_read", "name": "Slim\\Http\\Stream::read", "doc": "&quot;Read data from the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_write", "name": "Slim\\Http\\Stream::write", "doc": "&quot;Write data to the stream.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_getContents", "name": "Slim\\Http\\Stream::getContents", "doc": "&quot;Returns the remaining contents in a string&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Stream", "fromLink": "Slim/Http/Stream.html", "link": "Slim/Http/Stream.html#method_isPipe", "name": "Slim\\Http\\Stream::isPipe", "doc": "&quot;Returns whether or not the stream is a pipe.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/UploadedFile.html", "name": "Slim\\Http\\UploadedFile", "doc": "&quot;Represents Uploaded Files.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_createFromEnvironment", "name": "Slim\\Http\\UploadedFile::createFromEnvironment", "doc": "&quot;Create a normalized tree of UploadedFile instances from the Environment.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method___construct", "name": "Slim\\Http\\UploadedFile::__construct", "doc": "&quot;Construct a new UploadedFile instance.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_getStream", "name": "Slim\\Http\\UploadedFile::getStream", "doc": "&quot;Retrieve a stream representing the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_moveTo", "name": "Slim\\Http\\UploadedFile::moveTo", "doc": "&quot;Move the uploaded file to a new location.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_getError", "name": "Slim\\Http\\UploadedFile::getError", "doc": "&quot;Retrieve the error associated with the uploaded file.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_getClientFilename", "name": "Slim\\Http\\UploadedFile::getClientFilename", "doc": "&quot;Retrieve the filename sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_getClientMediaType", "name": "Slim\\Http\\UploadedFile::getClientMediaType", "doc": "&quot;Retrieve the media type sent by the client.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\UploadedFile", "fromLink": "Slim/Http/UploadedFile.html", "link": "Slim/Http/UploadedFile.html#method_getSize", "name": "Slim\\Http\\UploadedFile::getSize", "doc": "&quot;Retrieve the file size.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Http", "fromLink": "Slim/Http.html", "link": "Slim/Http/Uri.html", "name": "Slim\\Http\\Uri", "doc": "&quot;Value object representing a URI.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method___construct", "name": "Slim\\Http\\Uri::__construct", "doc": "&quot;Create new Uri.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_createFromString", "name": "Slim\\Http\\Uri::createFromString", "doc": "&quot;Create new Uri from string.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_createFromEnvironment", "name": "Slim\\Http\\Uri::createFromEnvironment", "doc": "&quot;Create new Uri from environment.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getScheme", "name": "Slim\\Http\\Uri::getScheme", "doc": "&quot;Retrieve the scheme component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withScheme", "name": "Slim\\Http\\Uri::withScheme", "doc": "&quot;Return an instance with the specified scheme.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_filterScheme", "name": "Slim\\Http\\Uri::filterScheme", "doc": "&quot;Filter Uri scheme.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getAuthority", "name": "Slim\\Http\\Uri::getAuthority", "doc": "&quot;Retrieve the authority component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getUserInfo", "name": "Slim\\Http\\Uri::getUserInfo", "doc": "&quot;Retrieve the user information component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withUserInfo", "name": "Slim\\Http\\Uri::withUserInfo", "doc": "&quot;Return an instance with the specified user information.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getHost", "name": "Slim\\Http\\Uri::getHost", "doc": "&quot;Retrieve the host component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withHost", "name": "Slim\\Http\\Uri::withHost", "doc": "&quot;Return an instance with the specified host.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getPort", "name": "Slim\\Http\\Uri::getPort", "doc": "&quot;Retrieve the port component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withPort", "name": "Slim\\Http\\Uri::withPort", "doc": "&quot;Return an instance with the specified port.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_hasStandardPort", "name": "Slim\\Http\\Uri::hasStandardPort", "doc": "&quot;Does this Uri use a standard port?&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_filterPort", "name": "Slim\\Http\\Uri::filterPort", "doc": "&quot;Filter Uri port.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getPath", "name": "Slim\\Http\\Uri::getPath", "doc": "&quot;Retrieve the path component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withPath", "name": "Slim\\Http\\Uri::withPath", "doc": "&quot;Return an instance with the specified path.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getBasePath", "name": "Slim\\Http\\Uri::getBasePath", "doc": "&quot;Retrieve the base path segment of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withBasePath", "name": "Slim\\Http\\Uri::withBasePath", "doc": "&quot;Set base path.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_filterPath", "name": "Slim\\Http\\Uri::filterPath", "doc": "&quot;Filter Uri path.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getQuery", "name": "Slim\\Http\\Uri::getQuery", "doc": "&quot;Retrieve the query string of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withQuery", "name": "Slim\\Http\\Uri::withQuery", "doc": "&quot;Return an instance with the specified query string.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_filterQuery", "name": "Slim\\Http\\Uri::filterQuery", "doc": "&quot;Filters the query string or fragment of a URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getFragment", "name": "Slim\\Http\\Uri::getFragment", "doc": "&quot;Retrieve the fragment component of the URI.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_withFragment", "name": "Slim\\Http\\Uri::withFragment", "doc": "&quot;Return an instance with the specified URI fragment.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method___toString", "name": "Slim\\Http\\Uri::__toString", "doc": "&quot;Return the string representation as a URI reference.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Http\\Uri", "fromLink": "Slim/Http/Uri.html", "link": "Slim/Http/Uri.html#method_getBaseUrl", "name": "Slim\\Http\\Uri::getBaseUrl", "doc": "&quot;Return the fully qualified base URL.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/CallableResolverInterface.html", "name": "Slim\\Interfaces\\CallableResolverInterface", "doc": "&quot;Resolves a callable.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\CallableResolverInterface", "fromLink": "Slim/Interfaces/CallableResolverInterface.html", "link": "Slim/Interfaces/CallableResolverInterface.html#method_resolve", "name": "Slim\\Interfaces\\CallableResolverInterface::resolve", "doc": "&quot;Invoke the resolved callable.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/CollectionInterface.html", "name": "Slim\\Interfaces\\CollectionInterface", "doc": "&quot;Collection Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_set", "name": "Slim\\Interfaces\\CollectionInterface::set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_get", "name": "Slim\\Interfaces\\CollectionInterface::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_replace", "name": "Slim\\Interfaces\\CollectionInterface::replace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_all", "name": "Slim\\Interfaces\\CollectionInterface::all", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_has", "name": "Slim\\Interfaces\\CollectionInterface::has", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_remove", "name": "Slim\\Interfaces\\CollectionInterface::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\CollectionInterface", "fromLink": "Slim/Interfaces/CollectionInterface.html", "link": "Slim/Interfaces/CollectionInterface.html#method_clear", "name": "Slim\\Interfaces\\CollectionInterface::clear", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/CookiesInterface.html", "name": "Slim\\Interfaces\\Http\\CookiesInterface", "doc": "&quot;Cookies Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_get", "name": "Slim\\Interfaces\\Http\\CookiesInterface::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_set", "name": "Slim\\Interfaces\\Http\\CookiesInterface::set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_toHeaders", "name": "Slim\\Interfaces\\Http\\CookiesInterface::toHeaders", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\CookiesInterface", "fromLink": "Slim/Interfaces/Http/CookiesInterface.html", "link": "Slim/Interfaces/Http/CookiesInterface.html#method_parseHeader", "name": "Slim\\Interfaces\\Http\\CookiesInterface::parseHeader", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/EnvironmentInterface.html", "name": "Slim\\Interfaces\\Http\\EnvironmentInterface", "doc": "&quot;Environment Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\EnvironmentInterface", "fromLink": "Slim/Interfaces/Http/EnvironmentInterface.html", "link": "Slim/Interfaces/Http/EnvironmentInterface.html#method_mock", "name": "Slim\\Interfaces\\Http\\EnvironmentInterface::mock", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces\\Http", "fromLink": "Slim/Interfaces/Http.html", "link": "Slim/Interfaces/Http/HeadersInterface.html", "name": "Slim\\Interfaces\\Http\\HeadersInterface", "doc": "&quot;Headers Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\HeadersInterface", "fromLink": "Slim/Interfaces/Http/HeadersInterface.html", "link": "Slim/Interfaces/Http/HeadersInterface.html#method_add", "name": "Slim\\Interfaces\\Http\\HeadersInterface::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\Http\\HeadersInterface", "fromLink": "Slim/Interfaces/Http/HeadersInterface.html", "link": "Slim/Interfaces/Http/HeadersInterface.html#method_normalizeKey", "name": "Slim\\Interfaces\\Http\\HeadersInterface::normalizeKey", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/InvocationStrategyInterface.html", "name": "Slim\\Interfaces\\InvocationStrategyInterface", "doc": "&quot;Defines a contract for invoking a route callable.&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\InvocationStrategyInterface", "fromLink": "Slim/Interfaces/InvocationStrategyInterface.html", "link": "Slim/Interfaces/InvocationStrategyInterface.html#method___invoke", "name": "Slim\\Interfaces\\InvocationStrategyInterface::__invoke", "doc": "&quot;Invoke a route callable.&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouteGroupInterface.html", "name": "Slim\\Interfaces\\RouteGroupInterface", "doc": "&quot;RouteGroup Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method_getPattern", "name": "Slim\\Interfaces\\RouteGroupInterface::getPattern", "doc": "&quot;Get route pattern&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method_add", "name": "Slim\\Interfaces\\RouteGroupInterface::add", "doc": "&quot;Prepend middleware to the group middleware collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteGroupInterface", "fromLink": "Slim/Interfaces/RouteGroupInterface.html", "link": "Slim/Interfaces/RouteGroupInterface.html#method___invoke", "name": "Slim\\Interfaces\\RouteGroupInterface::__invoke", "doc": "&quot;Execute route group callable in the context of the Slim App&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouteInterface.html", "name": "Slim\\Interfaces\\RouteInterface", "doc": "&quot;Route Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getArgument", "name": "Slim\\Interfaces\\RouteInterface::getArgument", "doc": "&quot;Retrieve a specific route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getArguments", "name": "Slim\\Interfaces\\RouteInterface::getArguments", "doc": "&quot;Get route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getName", "name": "Slim\\Interfaces\\RouteInterface::getName", "doc": "&quot;Get route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_getPattern", "name": "Slim\\Interfaces\\RouteInterface::getPattern", "doc": "&quot;Get route pattern&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setArgument", "name": "Slim\\Interfaces\\RouteInterface::setArgument", "doc": "&quot;Set a route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setArguments", "name": "Slim\\Interfaces\\RouteInterface::setArguments", "doc": "&quot;Replace route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_setName", "name": "Slim\\Interfaces\\RouteInterface::setName", "doc": "&quot;Set route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_add", "name": "Slim\\Interfaces\\RouteInterface::add", "doc": "&quot;Add middleware&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_prepare", "name": "Slim\\Interfaces\\RouteInterface::prepare", "doc": "&quot;Prepare the route for use&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method_run", "name": "Slim\\Interfaces\\RouteInterface::run", "doc": "&quot;Run route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouteInterface", "fromLink": "Slim/Interfaces/RouteInterface.html", "link": "Slim/Interfaces/RouteInterface.html#method___invoke", "name": "Slim\\Interfaces\\RouteInterface::__invoke", "doc": "&quot;Dispatch route callable against current Request and Response objects&quot;"},
            
            {"type": "Class", "fromName": "Slim\\Interfaces", "fromLink": "Slim/Interfaces.html", "link": "Slim/Interfaces/RouterInterface.html", "name": "Slim\\Interfaces\\RouterInterface", "doc": "&quot;Router Interface&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_map", "name": "Slim\\Interfaces\\RouterInterface::map", "doc": "&quot;Add route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_dispatch", "name": "Slim\\Interfaces\\RouterInterface::dispatch", "doc": "&quot;Dispatch router for HTTP request&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_pushGroup", "name": "Slim\\Interfaces\\RouterInterface::pushGroup", "doc": "&quot;Add a route group to the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_popGroup", "name": "Slim\\Interfaces\\RouterInterface::popGroup", "doc": "&quot;Removes the last route group from the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_getNamedRoute", "name": "Slim\\Interfaces\\RouterInterface::getNamedRoute", "doc": "&quot;Get named route object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_lookupRoute", "name": "Slim\\Interfaces\\RouterInterface::lookupRoute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_relativePathFor", "name": "Slim\\Interfaces\\RouterInterface::relativePathFor", "doc": "&quot;Build the path for a named route excluding the base path&quot;"},
                    {"type": "Method", "fromName": "Slim\\Interfaces\\RouterInterface", "fromLink": "Slim/Interfaces/RouterInterface.html", "link": "Slim/Interfaces/RouterInterface.html#method_pathFor", "name": "Slim\\Interfaces\\RouterInterface::pathFor", "doc": "&quot;Build the path for a named route including the base path&quot;"},
            
            {"type": "Trait", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/MiddlewareAwareTrait.html", "name": "Slim\\MiddlewareAwareTrait", "doc": "&quot;Middleware&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\MiddlewareAwareTrait", "fromLink": "Slim/MiddlewareAwareTrait.html", "link": "Slim/MiddlewareAwareTrait.html#method_addMiddleware", "name": "Slim\\MiddlewareAwareTrait::addMiddleware", "doc": "&quot;Add middleware&quot;"},
                    {"type": "Method", "fromName": "Slim\\MiddlewareAwareTrait", "fromLink": "Slim/MiddlewareAwareTrait.html", "link": "Slim/MiddlewareAwareTrait.html#method_seedMiddlewareStack", "name": "Slim\\MiddlewareAwareTrait::seedMiddlewareStack", "doc": "&quot;Seed middleware stack with first callable&quot;"},
                    {"type": "Method", "fromName": "Slim\\MiddlewareAwareTrait", "fromLink": "Slim/MiddlewareAwareTrait.html", "link": "Slim/MiddlewareAwareTrait.html#method_callMiddlewareStack", "name": "Slim\\MiddlewareAwareTrait::callMiddlewareStack", "doc": "&quot;Call middleware stack&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/Routable.html", "name": "Slim\\Routable", "doc": "&quot;A routable, middleware-aware object&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Routable", "fromLink": "Slim/Routable.html", "link": "Slim/Routable.html#method_getMiddleware", "name": "Slim\\Routable::getMiddleware", "doc": "&quot;Get the middleware registered for the group&quot;"},
                    {"type": "Method", "fromName": "Slim\\Routable", "fromLink": "Slim/Routable.html", "link": "Slim/Routable.html#method_getPattern", "name": "Slim\\Routable::getPattern", "doc": "&quot;Get the route pattern&quot;"},
                    {"type": "Method", "fromName": "Slim\\Routable", "fromLink": "Slim/Routable.html", "link": "Slim/Routable.html#method_setContainer", "name": "Slim\\Routable::setContainer", "doc": "&quot;Set container for use with resolveCallable&quot;"},
                    {"type": "Method", "fromName": "Slim\\Routable", "fromLink": "Slim/Routable.html", "link": "Slim/Routable.html#method_add", "name": "Slim\\Routable::add", "doc": "&quot;Prepend middleware to the middleware collection&quot;"},
                    {"type": "Method", "fromName": "Slim\\Routable", "fromLink": "Slim/Routable.html", "link": "Slim/Routable.html#method_setPattern", "name": "Slim\\Routable::setPattern", "doc": "&quot;Set the route pattern&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/Route.html", "name": "Slim\\Route", "doc": "&quot;Route&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method___construct", "name": "Slim\\Route::__construct", "doc": "&quot;Create new route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_finalize", "name": "Slim\\Route::finalize", "doc": "&quot;Finalize the route in preparation for dispatching&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getCallable", "name": "Slim\\Route::getCallable", "doc": "&quot;Get route callable&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_setCallable", "name": "Slim\\Route::setCallable", "doc": "&quot;This method enables you to override the Route&#039;s callable&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getMethods", "name": "Slim\\Route::getMethods", "doc": "&quot;Get route methods&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getGroups", "name": "Slim\\Route::getGroups", "doc": "&quot;Get parent route groups&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getName", "name": "Slim\\Route::getName", "doc": "&quot;Get route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getIdentifier", "name": "Slim\\Route::getIdentifier", "doc": "&quot;Get route identifier&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getOutputBuffering", "name": "Slim\\Route::getOutputBuffering", "doc": "&quot;Get output buffering mode&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_setOutputBuffering", "name": "Slim\\Route::setOutputBuffering", "doc": "&quot;Set output buffering mode&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_setName", "name": "Slim\\Route::setName", "doc": "&quot;Set route name&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_setArgument", "name": "Slim\\Route::setArgument", "doc": "&quot;Set a route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_setArguments", "name": "Slim\\Route::setArguments", "doc": "&quot;Replace route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getArguments", "name": "Slim\\Route::getArguments", "doc": "&quot;Retrieve route arguments&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_getArgument", "name": "Slim\\Route::getArgument", "doc": "&quot;Retrieve a specific route argument&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_prepare", "name": "Slim\\Route::prepare", "doc": "&quot;Prepare the route for use&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method_run", "name": "Slim\\Route::run", "doc": "&quot;Run route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Route", "fromLink": "Slim/Route.html", "link": "Slim/Route.html#method___invoke", "name": "Slim\\Route::__invoke", "doc": "&quot;Dispatch route callable against current Request and Response objects&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/RouteGroup.html", "name": "Slim\\RouteGroup", "doc": "&quot;A collector for Routable objects with a common middleware stack&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\RouteGroup", "fromLink": "Slim/RouteGroup.html", "link": "Slim/RouteGroup.html#method___construct", "name": "Slim\\RouteGroup::__construct", "doc": "&quot;Create a new RouteGroup&quot;"},
                    {"type": "Method", "fromName": "Slim\\RouteGroup", "fromLink": "Slim/RouteGroup.html", "link": "Slim/RouteGroup.html#method___invoke", "name": "Slim\\RouteGroup::__invoke", "doc": "&quot;Invoke the group to register any Routable objects within it.&quot;"},
            
            {"type": "Class", "fromName": "Slim", "fromLink": "Slim.html", "link": "Slim/Router.html", "name": "Slim\\Router", "doc": "&quot;Router&quot;"},
                                                        {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method___construct", "name": "Slim\\Router::__construct", "doc": "&quot;Create new router&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_setBasePath", "name": "Slim\\Router::setBasePath", "doc": "&quot;Set the base path used in pathFor()&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_setCacheFile", "name": "Slim\\Router::setCacheFile", "doc": "&quot;Set path to fast route cache file. If this is false then route caching is disabled.&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_setContainer", "name": "Slim\\Router::setContainer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_map", "name": "Slim\\Router::map", "doc": "&quot;Add route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_dispatch", "name": "Slim\\Router::dispatch", "doc": "&quot;Dispatch router for HTTP request&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_createRoute", "name": "Slim\\Router::createRoute", "doc": "&quot;Create a new Route object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_createDispatcher", "name": "Slim\\Router::createDispatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_setDispatcher", "name": "Slim\\Router::setDispatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_getRoutes", "name": "Slim\\Router::getRoutes", "doc": "&quot;Get route objects&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_getNamedRoute", "name": "Slim\\Router::getNamedRoute", "doc": "&quot;Get named route object&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_removeNamedRoute", "name": "Slim\\Router::removeNamedRoute", "doc": "&quot;Remove named route&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_processGroups", "name": "Slim\\Router::processGroups", "doc": "&quot;Process route groups&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_pushGroup", "name": "Slim\\Router::pushGroup", "doc": "&quot;Add a route group to the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_popGroup", "name": "Slim\\Router::popGroup", "doc": "&quot;Removes the last route group from the array&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_lookupRoute", "name": "Slim\\Router::lookupRoute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_relativePathFor", "name": "Slim\\Router::relativePathFor", "doc": "&quot;Build the path for a named route excluding the base path&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_pathFor", "name": "Slim\\Router::pathFor", "doc": "&quot;Build the path for a named route including the base path&quot;"},
                    {"type": "Method", "fromName": "Slim\\Router", "fromLink": "Slim/Router.html", "link": "Slim/Router.html#method_urlFor", "name": "Slim\\Router::urlFor", "doc": "&quot;Build the path for a named route.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


